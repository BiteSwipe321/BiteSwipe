name: Mocked Tests

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/mocked-tests.yml'

jobs:
  run-mocked-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Run mocked tests
        run: |
          cd backend
          echo "Running mocked tests..."
          npm run test:coverage:mocked -- --coverageReporters="json-summary" "text" --no-cache --forceExit
          
          # Save test results for reporting
          mkdir -p test-results
          cp coverage/coverage-summary.json test-results/
          
          # Display test summary
          echo "\n===== Test Summary ====="
          cat coverage/coverage-summary.json | jq '.total'

      - name: Create PR comment with test results
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            try {
              const summary = fs.readFileSync('./backend/coverage/coverage-summary.json', 'utf8');
              const data = JSON.parse(summary);
              
              let message = '## Mocked Tests Results\n\n';
              message += '| Category | % Stmts | % Branch | % Funcs | % Lines |\n';
              message += '|----------|---------|----------|---------|--------|\n';
              
              for (const [file, metrics] of Object.entries(data)) {
                if (file === 'total') {
                  message += `| Total | ${metrics.statements.pct}% | ${metrics.branches.pct}% | ${metrics.functions.pct}% | ${metrics.lines.pct}% |\n`;
                }
              }
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            } catch (error) {
              console.error('Error creating PR comment:', error);
            }
