name: 'Deploy Infrastructure'

on:
  push:
    branches:
      - main
      - terraform/*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    name: 'Deploy Infrastructure'
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Setup SSH Keys
      run: |
        mkdir -p ~/.ssh/to_azure
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/to_azure/CPEN321.pem
        echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/to_azure/CPEN321.pub
        chmod 600 ~/.ssh/to_azure/CPEN321.pem
        chmod 644 ~/.ssh/to_azure/CPEN321.pub
        ls -la ~/.ssh/

    - name: Create Firebase Credentials File
      run: |
        echo "${{ secrets.FIREBASE_CREDENTIALS_JSON }}" > backend/biteswipe-132f1-firebase-adminsdk-fbsvc-76c5bb6fe5.json
        chmod 600 backend/biteswipe-132f1-firebase-adminsdk-fbsvc-76c5bb6fe5.json
        ls -la backend/biteswipe-132f1-firebase-adminsdk-fbsvc-76c5bb6fe5.json

    - name: Setup Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: '1.5.0'

    - name: Destroy Existing Infrastructure
      run: |
        cd backend/scripts
        python3 destroy_infra.py || true  # Run destroy and continue even if it fails

    - name: Wait for Resource Cleanup
      run: sleep 30  # Wait for resources to be fully destroyed

    - name: Deploy New Infrastructure
      run: |
        cd backend/scripts
        python3 deploy_infra.py
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
